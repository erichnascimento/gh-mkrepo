#!/usr/bin/env sh

# Library version

VERSION="0.0.3"

# curl / wget support

GET=

# TODO: wget support

# curl
which curl > /dev/null && GET="curl -s"

test -z "$GET" && abort "curl or wget required."

# Github username

USERNAME=

# Repository name to create

REPO_NAME=

#
# Exit with the given <msg ...>
#

abort() {
  printf "\n  \033[31mError: $@\033[0m\n\n" && exit 1
}

show_usage() {
  cat <<-EOF

  Usage: $0 [options] [args]

  Options:

    -u, --username <username> <repo-name>    Create a new repository <repo-name> on Github
    -h, --help                               Display usage information
    -V, --version                            Output current version

EOF
  exit 0;
}

create_gh_repo() {
  test -z "$REPO_NAME" && abort "Repository name required"

  $GET https://api.github.com/user/repos \
    -u "$USERNAME"  \
    -d "{\"name\": \"$REPO_NAME\"}" > /dev/null \
    && \
    echo "\n  Repository created sucessfully!!!\n  Access: https://github.com/$USERNAME/$REPO_NAME \n" \
    && \
    exit
}

# TODO: Add remote
add_remote() {
  return 0
}

#
# Handle arguments
#

if test $# -eq 0; then
  show_usage
else
  while test $# -ne 0; do
    case $1 in
      -h|--help) show_usage; exit ;;
      -u|--username) shift; USERNAME=$1 ;;
      *) REPO_NAME=$1; create_gh_repo; exit ;;
    esac
    shift
  done
fi
